[Notes]
# Copyright (c) N. A. Inc. 2022
# This program is free software per V3, or later version, of the GNU General Public License.
# It is distributed AS-IS, WITHOUT ANY WARRANTY, or implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.
#
# This is the configuration file for the DPM.py (Dual Path Monitoring)
# application, written in Python3.  If you supply correct values and do
# NOT change the Section names or Keywords then it may still work correctly.

[WirelessProvider]
# Account and service details for wireless provider/mobile network operator
# Renews monthly on a given day by direct debit to credit card/bank account.
# If  you are paying per SMS, then set SMS-Allowance to the maximum
# number of SMS messages that fits your monthly spending budget.
RenewalDay = 15
SMS-Allowance = 100

[Modem]
# Modem connection information required by pySerial module
ModemRebootDevice = /dev/ttyACM0
ModemCommsDevice = 	/dev/ttyACM3
ModemBaud = 115200
ModemTimeOutSecs = 5
ModemConnectRetries = 20
ModemCheckInSecs = 61
# Set ModemSoftReboot to False if Hat and modem power-cycle when Ras Pi rebooted.
ModemSoftReboot = False
# Set ModemInboundSMS to True if you wish to send SMS requests to DPM
ModemInboundSMS = True

[CellPhones]
# Comma separated Phone Number(s) for SMS alert(s) (a category can be empty).
# US domestic numbers begin with "1", International numbers begin with "+"
RedAlertCellPhones = 19990001212,19990002323,19990003434
YellowAlertCellPhones =
RebootAlertCellPhones = 19990001212
InboundSMSCellPhones = 19990001212

[SecuritySystem]
# Zone and User IDs and descriptions (the curly braces are required)
Zones = {'001': 'Ground Floor Smokes', '002': 'Front Door', '003': 'Back Door', '004': 'Side Door', '005': 'Hall', '006': 'Kitchen', '007': 'Dining Room', '008': 'Family Room'}
Users = {'001': 'Me', '002': 'You', '003': 'John', '004': 'Paul', '005': 'George', '006': 'Ringo'}
# Token matching for decoded TPI message type '00' data is all UPPERCASE (e.g. 'FIRE')
# Token matching against decoded CID data from Syslog is all LOWERCASE (e.g. 'fire')
# Security system message tokens to eliminate from SMS messages (square brackets required)
# 'CHIME' is fluff, 'AC PRESENT' is moot if the security system is powered by a UPS.
IgnoreTokens = ['CHIME', 'AC PRESENT']
# Do not send an SMS if CID message has any of these tokens (square brackets required)
NotTheseTokens = ['Loss of supervision - RPM', 'Assign Your Own Description' ]
# Send an SMS for these urgent event tokens (square brackets required)
UrgentTokens = ['ALARMED STATE', 'FIRE', 'TROUBLE', 'alarm', 'fire', 'trouble', 'failure']
# Ideally, send an SMS for these important event tokens (square brackets required)
ImportantTokens = ['ARMED AWAY', 'close event:401']

[EVL4-Syslog]
# enable/disable (True/False) EVL4 syslog scans
ScanSyslog = True
Log = /home/pi1/DPM-EVL4/logs/EVL4.log
Offset = /home/pi1/DPM-EVL4/logs/EVL4.offset

[Timings]
# RecentSecondsEVL4 should be greater than or equal to AdjacentSecondsEVL4
# An event is "recent" if it occurred within the past RecentSecondsEVL4
# Syslog and TPI events are "adjacent" if within AdjacentSecondsEVL4 of each other
RecentSecondsEVL4 = 120
# Events occurring no more than AdjacentSecondsEVL4 apart are "adjacent"
AdjacentSecondsEVL4 = 90
RecentSecondsSMS = 60

[TelEVL4]
# Telnet connectivity to EVL4 IP Module
TelEVL4RebootURL = http://192.168.nnn.nnn/3?A=2
TelEVL4SoftReboot = True
TelEVL4Host = 192.168.nnn.nnn
TelEVL4Port = 4025
TelEVL4TimeOutSecs = 10
TelEVL4ConnectRetries = 20
# in cleartext, EVL4's password must be a max of 10 characters, with no special chars.
# Use the protectPassword.py utility to protect it from 'spies'. Stupefied passwords
# begin and end with either single or double quotes; cleartext passwords do not.
TelEVL4Password = 'YOUR-STUPEFIED-PASSWORD'
# set polling interval (minutes) to prime number less than 20
TelEVL4PollingMins = 17
# interval (seconds) between 'stay awake' requests to the EVL4 module
TelEVL4StayAwakeSecs = 179

[Ping]
# Used to test the presence of a functional internet connection
# The square braces are required. Hostname will be appended programmatically.
PingCommand = ['ping', '-c', '1', '-W', '2', ]
# hosts known to respond to a ping (the curly braces are required)
Pingers = {1: 'google.com', 2: '3.north-america.pool.ntp.org', 3: 'amazon.com', 4: '2.north-america.pool.ntp.org', 5: 'yahoo.com', 6: '1.north-america.pool.ntp.org', 7: 'facebook.com', 8: '0.north-america.pool.ntp.org', 9: 'youtube.com'}

[SMS]
# enable/disable (True/False) SMS alerts (some testing facilitated by False)
SendSMS = False
# If 7-bit GSM encoding is used, maximum message is 160 characters, else if
# 8-bit encoding is used, maximum is 140 characters.  Most wireless providers
# accept SMS messages with more than 160 characters, but will bill each
# additional maximum chunk of characters as a separate SMS, accordingly.
SMSsize = 160

[Logging]
# In decreasing verbosity order = TRACE, DEBUG, INFO, WARNING, ERROR, CRITICAL
# Set at INFO for normal production operations
LogLevel = DEBUG
# For each run,  %%s  will be replaced automatically by a date-time stamp
LogFile = /home/pi1/DPM-EVL4/logs/DPM-%%s.log

[RasPi]
# enable/disable (True/False) Raspberry Pi reboot attempts
RasPiReboot = True
RasPiRebootRetries = 2
